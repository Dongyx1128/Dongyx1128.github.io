{"pages":[{"title":"","text":"个人简介 分享很喜欢的老罗的一段话： “每一个生命来到世间都注定改变世界，别无选择。要么变得好一点，要么变得坏一点。你如果走进社会为了生存为了什么不要脸的理由，变成了一个恶心的成年人社会中的一员，那你就把这个世界变得恶心了一点点。如果你一生刚正不阿，如果你一生耿直，没有做任何恶心的事情，没做对别人有害的事情，一辈子拼了老命勉强把自己身边的几个人照顾好了，没有成名没有发财，没有成就伟大的事业，然后耿着脖子一生正直，到了七八十岁耿着脖子去世了。你这一生是不是没有改变世界？你还是改变世界了，你把这个世界变得美好了一点点。因为世界上又多了一个好人。“ 善恶终有报,天道好轮回。不信抬头看,苍天饶过谁。无论何时何地，我们都要保持一颗积极乐观、善良感恩的心。但行好事莫问前程，永远年轻，永远热内盈眶，永远保持正能量。💪💪💪💪💪💪冲鸭！！！！ -&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;个人信息：读研中… 博客信息 网站采用的Icarus主题 追求尽可能的简洁，清晰，易用。 在Icarus主题之上进行了部分修改。 更新日志：–2020.09.20：icarus4.0适配–2020.01.18：icarus3.0适配–2019.11.17：增加深色主题开关–2019.10.30：去图，精简卡片–2019.10.22：改版部分显示，优化速度–2019.10.16：文章列表加上评论数显示–2019.10.13：改版评论–2019.09.25：图片、资源接入CDN免费jsDelivr、文章加入置顶–2019.09.19：开源博客代码–2019.09.19：修改布局，拉伸布局，更宽的展示–2019.09.18：修改友链ui为一行三个，并适配移动端，暗黑模式文章增加评论链接，增加留言链接–2019.09.14：增加精简next主题–2019.09.14：利用中秋节放假，重做了首页的热门推荐、加个widget最新评论框、归档页加入文章贡献概览面板 本站推荐索引 博客主题相关 github Issue 作为博客微型数据库的应用 github page网站cdn优化加速 博客源码分享 博客换肤的一种实现方式思路 博客中gitalk最新评论的获取 博客图片上传picgo工具github图传使用 安装、部分配置icarus主题中文版 技术知识点 Java并发知识点 法律法规 法律法规数据库 中华人民共和国国旗法 中华人民共和国宪法 中华人民共和国消费者权益保护法 中华人民共和国刑事诉讼法 中华人民共和国婚姻法 中华人名共和国网络安全法 中华人民共和国劳动法 其他 网易云音乐歌单分享 计划2021计划 2021.12.11 2021-GOALS 东北滑雪 2020计划 2020.11.28/08:05:20-&gt;更新于2020.11.29 2020-GOALS 购买的专业书籍至少看完一遍（并发、重构、设计模式…）-&gt; 95% 额外： 追了很多剧 总结： 有优点有缺点，没坚持下来的还是太多，追了太多剧。以后多学习，多思考！ 时间轴记录","link":"/about/index.html"},{"title":"","text":"🎈🎈微笑墙🎈🎈 彭小苒 唐艺昕 李一桐 gakki 图片搜集于互联网，侵权请留言，马上处理😊。","link":"/album/index.html"},{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://removeif.github.io/images/avatar.jpg 网站名称：辣椒の酱 网站地址：https://removeif.github.io 网站简介：后端开发，技术分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"","text":"&nbsp;&nbsp;听听音乐 音乐播放器由mePlayer提供，布局参照网友博客所作，感谢作者的辛勤付出。更多音乐分享请查看歌单。 &nbsp;&nbsp;看看视频 ->点击以下条目开始播放视频,向下滑动查看更多","link":"/media/index.html"},{"title":"音乐歌单收藏","text":"温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/index.html"},{"title":"","text":"碎碎念 tips：github登录后按时间正序查看、可点赞加❤️、本插件地址..「+99次查看」 碎碎念加载中，请稍等... $.getScript(\"/js/gitalk_self.min.js\", function () { var gitalk = new Gitalk({ clientID: 'c7ddf740765e929b6ea6', clientSecret: 'ca4c793dfa21e766e20beac07d9b855be6ca6897', id: '1128', repo: 'issue_database', owner: 'Dongyx1128', admin: \"Dongyx1128\", createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });","link":"/self-talking/index.html"}],"posts":[{"title":"Hello World","text":"&emsp;&emsp; welcome to My blog! This is My first post. Click this for more info. &emsp;&emsp; If you get any problems when watch this post, you can find the answer in My blog or you can ask me on GitHub. Quick Start&emsp;&emsp;md文件保存到本地： &emsp;copy文件–&gt;F:\\blog\\source_posts &emsp;Git Bash Here进入Git命令行 Create a new post&emsp;&emsp;新建博客帖 1$ hexo new &quot;My New Post&quot; Clean&emsp;&emsp;清理文件 1$ hexo clean Generate static files&emsp;&emsp;生成静态页面 1$ hexo generate Run server&emsp;&emsp;打开localhost:4000观看效果 1$ hexo server Deploy to remote sites&emsp;&emsp;部署到自己的Github博客 1$ hexo deploy Clone project1$ git clone http:// Upload to the staging area1$ git add. Commit changes1$ git commit -m &quot;XXXXX&quot; Push to the Git repository1$ git push Pull the project to the local1$ git pull","link":"/2020/05/11/hello-world/"},{"title":"博客优化","text":"博客源码在主题icarus基础之上参照各网友博客，以及自己的一些想法做出的一些修改以及增加部分新元素。除了以下配置，其余配置请到icarus官网查看。因为修改了原作者源码，有什么问题请先联系我，不要去麻烦原作者了，能自己解决的问题就不要麻烦别人了，每个人的时间都很宝贵。 线上博客：欢迎围观，博客源码Live Demo 首页1 首页2 首页深色 写在前面膜拜和感谢所有模块的原作者,orz👻,辛苦了。使用之前请详细阅读此文档，以及主题配置文件_config.yml使用之前请详细阅读此文档，以及主题配置文件_config.yml使用之前请详细阅读此文档，以及主题配置文件_config.yml相关使用问题也在此issue有说明，请先查看 本仓库为纯主题仓库，博客主题完整仓库(已不维护)请移步为hexo-theme-icarus-removeifmaster分支已在信息流中加入adsense广告配置提供site分支博客demo源码 一、icarus主题之上主要改动 新增gitalk最新评论widget 首页增加热门推荐 增加弹性配置影音（可加音乐、视频）模块 丰富弹性配置about页面 新增弹性配置友链模块 整体布局左右拉伸了一点，紧凑一些 文章页双栏模式、固定导航栏 引入可配置看板娘 归档页加入了一个文章贡献概览 置顶文章的设置 文章列表评论数显示 文章中推荐文章模块配置 增加深色主题切换 加入加密文章 碎碎念功能 透明无界样式 简化部分widget数据，加入查看全部按钮 gitalk评论增加评论开关，评论列表中标记博主 加入pjax提升页面访问体验，配置文件中可开启关闭 侧边栏加入可配置网易云歌单音乐插件，配合pjax可以实现页面间切换背景音乐不间断 文章中加入相关文章模块，取分类相同的最新的5条文章 支持valine最新评论以及文章评论数显示 utteranc评论随博客主题切换自动切换深色主题 首页增加可配置banner参考自水寒教程 有问题可以在线询问gitter.im 还有什么新的，好的feature欢迎大家随时提出来，有能力有时间就做出来 二、部分配置说明：本机环境：12345678192:hexo-theme-icarus-removeif xx$ node -vv11.1.0192:hexo-theme-icarus-removeif xx$ npm -v6.4.1``` #### 在博客目录下clone主题代码```jshelllanguagegit clone https://github.com/removeif/hexo-theme-amazing.git themes/amazing 开始部分配置：敲黑板！！！！首先全局以及主题中的_config.yml配置成自己的对应参数。 把主题中ex_pages文件夹中的文件复制到博客主目录相应目录下面。包含了文章模板、关于页、相册页、友链、留言板、音乐、影音、碎碎念页面（各个页面的.md文件可自定义修改内容），可以自己选择性需要哪些页面复制哪些过去，同时对应配置主题中_config.yml需要删除以及保留相应的menu，如下配置 12345678910111213navbar: # Naviagtion menu items menu: 首页: / 归档: /archives 分类: /categories 标签: /tags 影音: /media 相册: /album 友链: /friend 碎碎念: /self-talking 留言: /message 关于: /about 1.热门推荐，最新评论：热门推荐仅支持gitalk，最新评论支持gitalk &amp; valine对应主题中的_config.yml要开启如下配置（此为gitalk，valine配置文件中也有示例），xxx换成自己的，否则无效。对于gitalk部署博客后需要到相应文章评论处点击初始化issue评论，完成评论的初始化。 1234567891011comment: type: gitalk owner: xxx # (required) GitHub user name repo: xxx # (required) GitHub repository name client_id: xxx # (required) OAuth application client id client_secret: xxx # (required) OAuth application client secret admin: xxx #此账户一般为用户名 GitHub user name 文章中能创建issue需要此用户登录才可以，点了创建issue后刷新一遍才能看到！！！！ create_issue_manually: true distraction_free_mode: true has_hot_recommend: true # 是否有热门推荐 has_latest_comment: true #是否有最新评论 说明： has_hot_recommend: true 是否开启首页热评，false-不开启，true-开启 has_latest_comment: true 是否开启最新评论，false-不开启，true-开启 热门推荐数据为评论数最多的文章，🔥后面的数字：根据文章的评论数*101 。 最新评论：为该仓库下，所有issue中的最新评论。 目前的最新评论有1分钟的本地缓存，评论后可能1分钟后才能看见最新评论，出于性能优化，每次请求接口处理还是挺耗时，comment-issue-data.js中可以自己去掉。 2.友链数据文件：文件路径：themes/amazing/source/js/friend.js相应格式增加自己需要的数据。友链数据中，”valid”: 0 代表异常网站，”valid”: 1或者不填此字段代表正常网站，可以自己配置；”stopTime”: “2019.09.09”代表异常时访问的时间 123456789{&quot;date&quot;: &quot;2019.09.09&quot;,&quot;stopTime&quot;: &quot;2019.09.09&quot;,&quot;src&quot;: &quot;https://cdn.jsdelivr.net/gh/removeif/removeif.github.io/images/tuzi.jpg&quot;,&quot;name&quot;: &quot;@辣椒の酱&quot;,&quot;desc&quot;: &quot;后端开发，技术分享。&quot;,&quot;url&quot;: &quot;https://removeif.github.io/&quot;,&quot;valid&quot;: 0} 3.影音数据文件：文件路径：音乐：themes/amazing/source/json_data/music.json视频：themes/amazing/source/json_data/video.json相应格式增加自己需要的数据。 4.关于页面时间轴记录数据文件：文件路径：themes/amazing/source/json_data/record.json相应格式增加自己需要的数据。 5.看板娘配置主题中的_config.yml配置如下设置 1has_live_2D_switch: true #live2D开关 true为打开,false为关闭 6.置顶设置：.md文章头部数据中加入top值，top值越大越靠前，大于0显示置顶图标。修改依赖包中文件removeif/node_modules/hexo-generator-index/lib/generator.js如下： 12345678910111213141516171819202122232425262728'use strict';const pagination = require('hexo-pagination');module.exports = function(locals){ var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) { if(a.top == undefined){ a.top = 0; } if(b.top == undefined){ b.top = 0; } if(a.top == b.top){ return b.date - a.date; }else{ return b.top - a.top; } }); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, { perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: { __index: true } });}; 7.配置文章中推荐文章模块根据配置的recommend值（必须大于0），值越大越靠前，相等取最新的，最多取5条。recommend（6.中top值也在下面示例）配置在.md文章头中，如下 123456789title: 博客源码分享top: 1toc: truerecommend: 1 keywords: categories-githubdate: 2019-09-19 22:10:43thumbnail: https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20190919221611.pngtags: 工具教程categories: [工具教程,主题工具] 8.文章中某个代码块折叠的方法代码块头部加入标记 &gt;folded，如下代码块中使用。 main.java >folded123456789// 使用示例，.md 文件中头行标记&quot;&gt;folded&quot;// ```java main.java &gt;folded// import main.java// private static void main(){// // test// int i = 0;// return i;// }// \\\\``` 9.加入加密文章如下需要加密的文章头部加入以下代码 123456789101112---title: 2019成长记01top: -1toc: truekeywords: categories-javaencrypt: truepassword: 123456 #此处为文章密码abstract: 咦，这是一篇加密文章，好像需要输入密码才能查看呢！message: 嗨，请准确无误地输入密码查看哟！wrong_pass_message: 不好意思，密码没对哦，在检查检查呢！wrong_hash_message: 不好意思，信息无法验证！--- 注：加密文章不会出现在最新文章列表widget中，也不会出现在文章中推荐列表中，首页列表中需要设置top: -1 让它排在最后比较合理一些。 10.碎碎念的使用在github中，创建碎碎念issue，并且打上对应的label（eg:Gitalk,666666）如下图，此处666666对应下面配置代码中的id，填写到：博客目录/source/self-talking/index.md文件中如下对应位置，其余配置也要改成自己的，如clientID等。 123456789101112131415&lt;script&gt; $.getScript(&quot;/js/gitalk_self.min.js&quot;, function () { var gitalk = new Gitalk({ clientID: '46a9f3481b46ea0129d8', clientSecret: '79c7c9cb847e141757d7864453bcbf89f0655b24', id: '666666', repo: 'issue_database', owner: 'removeif', admin: &quot;removeif&quot;, createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });&lt;/script&gt; 如下： 11.本博客样式（透明无界）只需要放开themes/amazing/source/css/base.styl文件中以下样式代码注释即可，默认是注释的没启用 12345678910111213141516171819202122232425262728293031323334353637383940414243//=================本博客使用样式 start// 首页去图.body_hot_comment .comment-content .card-comment-item .ava, .media-left, .is-6-widescreen .card-image { display: none;}hover-color = #deeafb;// 去card.card { background-color: unset; box-shadow: unset;}.navbar, footer.footer { background-color: unset;}body:not(.night) .navbar:hover,body:not(.night) .footer:hover,body:not(.night) .card:hover,body:not(.night) .pagination:hover,body:not(.night) .post-navigation:hover{ background-color: hover-color; box-shadow: 0 4px 10px rgba(0,0,0,0.05),0 0 1px rgba(0,0,0,0.1);}.pagination, .post-navigation{ padding: 10px;}.pagination .pagination-link:not(.is-current), .pagination .pagination-previous, .pagination .pagination-next { background-color:rgba(255,255,255,0);}.timeline .media:last-child:after { background: unset;}.content .gt-container .gt-comment-admin .gt-comment-content { border: 2px solid #deeafb;}//=================本博客使用样式 end 如下： 精简部分widget数据widget中的归档和分类和标签精简了，数据多时不太协调，改为了分别展示5条和10条和20条，增加了查看全部。 gitalk评论增加评论开关，评论列表中标记博主需要关闭评论的在文章头部加入 comments: false,原来已经评论的依然会显示，如下 原来已有博客文章的迁移，只需要把原来对应的文章放到source/_posts里即可。然后去对应文章下面创建评论issue。 其余配置完整配置，请仔细阅读主题中_config.yml 123456789101112has_hitokoto: true #左边一言开关，true-开，false-关 has_latest_modify_time: true #是否显示最后修改时间 true开启，false-关闭 busuanzi_only_count: false #当上面plugins中busuanzi: true时，此配置busuanzi_only_count为true时，网站不显示不蒜子统计数据，但是会每次统计。false时显示统计数据。has_copyright: true # 文中是否显示copyright true开启，false-关闭 # http://sachinchoolur.github.io/lightGallery/docs/api.html lightgallery_is_full: true #图片灯箱是否显示完整的插件(包括放大，分享等)，true-显示，false-显示简洁版website_start_time: 2018/11/11 00:00:00 #网站运行开始时间,不填不显示footer_registered_no: 测试-川ICP备20001070号-1 #备案号footer_copyright_dsec: true #footer 版权说明 true-开 false-关has_live_2D_switch: true #live2D开关 true-开 false-关side_music_netease_id: 2364053447 #侧边栏网易云歌单iduse_pjax: false #是否开启pjax，false-不开启，true-开启，开启后局部更新网页信息，切换页面背景音乐不间断等特性 以上配置好后12345$ npm install #安装依赖包（只需要执行一次）可直接把本文最后的json文件内容复制到博客下面的依赖文件package.json后在执行此命令，如果原来已有node_modules文件夹，请先删除在执行此命令$ hexo clean #清除缓存$ hexo g #编译 $ hexo s #启动服务 $ hexo d #推到远程 安装依赖包（只需要执行一次），以后修改了代码 只需要执行后面几条就好。 写在后面如果你有问题请反馈: issues （请务必先于issues中寻找答案）如果你喜欢该主题: star如果你想定制主题: fork LicenseThis project is licensed under the MIT License - see the LICENSE file for details. 其余主题彩蛋文章中横竖图demo；对于横竖图推荐分开使用，且长宽一致的，如统一手机拍照、电脑截图使用方法：md文章中放入以下代码 12345678910111213141516171819+ 横竖图&lt;div class=&quot;justified-gallery&quot;&gt;![张芷溪](http://wx1.sinaimg.cn/large/b5d1b710ly1g6bz7n92s7j212w0nr1kx.jpg) ![李一桐](http://wx2.sinaimg.cn/mw1024/005RAHfgly1fvfc4f19qfj33402c0qv9.jpg) ![gakki](http://wx1.sinaimg.cn/mw1024/70396e5agy1g5qe457i6yj21660ogtap.jpg) ![李一桐](http://wx1.sinaimg.cn/mw1024/005RAHfgly1fuzz17s2q3j32e43cku0x.jpg) ![彭小苒](http://wx1.sinaimg.cn/mw1024/d79c9b94ly1g1pb1uthr5j21f02iox6t.jpg)&lt;/div&gt;+ 横图4&lt;div class=&quot;img-x&quot;&gt;![v4](https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191022182226.png) ![v3](https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191018114126.png) ![v4](https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191022182226.png) ![v3](https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191018114126.png)&lt;/div&gt;+ 竖图5&lt;div class=&quot;img-y&quot;&gt;![电池](https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191024145940.jpg) ![打王者荣耀](https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191024141906.jpg) ![支付宝付款](https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191024141926.jpg) ![锤子便签](https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191024145956.jpg) ![电池](https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191024145940.jpg)&lt;/div&gt; 效果如下（多图左右拉查看）查看效果","link":"/2021/12/12/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"},{"title":"基于hexo+GitHub的博客搭建","text":"&emsp;&emsp;很多人都想搭建自己的博客，但是奈何技术有限，服务器部署，HTML，域名解析，等等，这一大堆东西可真有的折腾。&emsp;&emsp;但是如果有这样一个机会，不需要太复杂的操作，不要服务器，不要域名，不用写html，你愿意去尝试吗？ 优点1、不需要服务器，github免费提供的托管服务2、不需要域名，github同样提供了一个.io的域名3、不用自己写xml、hexo提供了很多开源的博客模板。4、便于维护更新，换风格直接换模板就行。 安装Nodejs1.查看node版本： 1node -v 2.查看npm版本： 1npm -v 3.安装淘宝的cnpm 管理器： 1npm install -g cnpm --registry=http://registry.npm.taobao.org 4.查看cnpm版本： 1cnpm -v 安装hexo框架1.安装hexo框架： 1cnpm install -g hexo-cli 2.查看hexo版本： 1hexo -v 创建博客1.创建blog目录： 1mkdir blog 2.进入blog目录： 1cd blog 3.生成博客 初始化博客： 1sudo hexo init 4.启动本地博客服务： 1hexo s 5.本地访问地址： 1http://localhost:4000/ 博客放置到Github1.在blog目录下安装git部署插件： 1cnpm install --save hexo-deployer-git 2.Github创建一个新的仓库 YourGithubName.github.io： 必须与Github名字一致，YourGithubName.github.io 例：Dongyx1128的Github与Dongyx1128的博客 博客发布个性化1.新建博客(两种方式都可)： 新建md文件，保存至本地:&emsp;&emsp;copy–&gt;F:\\blog\\source_posts 创建新的文章 1hexo n &quot;XXXXX&quot; 2.清理缓存文件： 1hexo clean 3.生成静态页面： 1hexo generate 4.启动本地服务,至localhost:4000查看效果 1hexo server 5.部署至远程Github仓库： 1hexo deploy 6.查看博客： 1https://YourGithubName.github.io/ 配置_config.yml DeploymentDocs: https://hexo.io/docs/deployment.htmldeploy:type: gitrepo: https://github.com/YourGithubName/YourGithubName.github.io.gitbranch: master","link":"/2020/10/06/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E7%BC%96%E8%BE%91/"},{"title":"博客文章Markdown格式","text":"&emsp;&emsp;如若需要发表博客文章，MarkDown的开头格式的设置需遵循以下的规则：包括博客主页如果要显示标题、标签、分类、顶部图、推荐权值、是否显示目录等等。 12345678910111213title: 标题top: 1toc: true false 是否显示目录recommend: 1 文章推荐权值 keywords: 关键字date: 2019-09-19 22:10:43 日期thumbnail: https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20190919221611.png 封面图片tags: 工具教程 标签categories: [工具教程,主题工具] 分类博文摘要&lt;!-- more --&gt;博文正文 注意文章模板文件中的配置 /scaffolds/post.md 1234567891011---thumbnail:title: {{ title }}date: {{ date }}tags:categories: toc: truerecommend: 1keywords: categories-javauniqueId: {{ date }}/{{ title }}.html uniqueId 文章唯一标识，用于评论issue的id---","link":"/2022/05/07/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE/"},{"title":"阿里云盾彻底卸载，屏蔽IP不在恢复","text":"关于阿里云盾&emsp;&emsp;用过阿里云ecs服务器或者产品的人都知道，阿里云是自带安全扫描还有云盾防御的，虽然表面上是说给你安全防御，其实就是为了获取你的数据。 &emsp;&emsp;另外还可以记录一些攻击记录，让你付费解决，不过都没什么卵用，该被攻击的还是会被攻击，该花钱解决问题的一个子都少不了。 &emsp;&emsp;如果自己服务器天天要被阿里云扫描，那么有什么违规关键词都会给你封了，特别是小站，没人气就没攻击，不过阿里云会天天攻击你，告诉你网站漏洞。 &emsp;&emsp;最后呢，要么你自己解决，要么你就花钱解决，对于强迫症的人来说，阿里云盾给你带来的是无时无刻的折腾。 卸载阿里云盾&emsp;&emsp;远程连接到阿里云云服务器或者轻量应用服务器后，执行以下代码卸载阿里云盾： 123456wget http://update.aegis.aliyun.com/download/uninstall.shchmod +x uninstall.sh./uninstall.shwget http://update.aegis.aliyun.com/download/quartz_uninstall.shchmod +x quartz_uninstall.sh./quartz_uninstall.sh 删除阿里云盾文件残留&emsp;&emsp;卸载阿里云盾后，执行如下代码删除阿里云盾文件残留： 123pkill aliyun-servicerm -fr /etc/init.d/agentwatch /usr/sbin/aliyun-servicerm -rf /usr/local/aegis* 屏蔽阿里云盾IP&emsp;&emsp;最后就是屏蔽阿里云盾的IP： 1234567891011iptables -I INPUT -s 140.205.201.0/28 -j DROPiptables -I INPUT -s 140.205.201.16/29 -j DROPiptables -I INPUT -s 140.205.201.32/28 -j DROPiptables -I INPUT -s 140.205.225.192/29 -j DROPiptables -I INPUT -s 140.205.225.200/30 -j DROPiptables -I INPUT -s 140.205.225.184/29 -j DROPiptables -I INPUT -s 140.205.225.183/32 -j DROPiptables -I INPUT -s 140.205.225.206/32 -j DROPiptables -I INPUT -s 140.205.225.205/32 -j DROPiptables -I INPUT -s 140.205.225.195/32 -j DROPiptables -I INPUT -s 140.205.225.204/32 -j DROP &emsp;&emsp;推荐屏蔽云盾/24段： 12iptables -I INPUT -s 140.205.201.0/24 -j DROPiptables -I INPUT -s 140.205.225.0/24 -j DROP 检查阿里云盾是否卸载干净&emsp;&emsp;最后检查一下自己的服务器上的阿里云盾是否卸载干净了，主要就是看进程里有没有阿里云盾的相关进程了(AliYunDun、aliyun-service和AliYunDunUpdate),可以通过下面的命令来检查，如果没有相关进程则说明阿里云盾已经卸载干净了。 1ps -aux | grep -E 'aliyun|AliYunDun'","link":"/2020/10/06/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%BE%E5%BD%BB%E5%BA%95%E5%8D%B8%E8%BD%BD%EF%BC%8C%E5%B1%8F%E8%94%BDIP%E4%B8%8D%E5%86%8D%E6%81%A2%E5%A4%8D/"},{"title":"更换终端后博客环境重建","text":"&emsp;&emsp;在电脑重装之后，git、nodejs等环境丢失，如果需要继续更新博文的话，则需要重新配置环境，这就是个非常棘手的问题。主要思路是利用git分支来实现hexo的同步。 主要思路： hexo生成的静态页面文件默认放在master分支上，这是由_config.yml配置文件所决定的，因此每当我们执行hexo d的时候，hexo都会帮我们把生成好的静态页面文件推到master分支上。 执行hexo d对应的分支和默认分支是没有关系的，因为这是由配置文件决定的，配置文件(master)写的哪个分支就是哪个分支。 hexo的源文件(部署环境文件)可以都放在hexo分支上。然后把hexo分支设置成默认分支。 &emsp;&emsp;把hexo分支设置成默认分支，用来存放源文件，master分支依然存放静态文件。在老电脑上，我们需要把必要的源文件push到hexo分支。换新电脑时，直接git clone 仓库地址此时会从hexo分支下载源文件，剩下的就是安装hexo环境，在新电脑上就可以重新生成静态页面了，并且因为配置文件clone下来，deploy配置依旧是master分支，所以在新电脑上执行hexo d还是会把更新过后的静态文件推送到master分支上。&emsp;&emsp;由于master分支和hexo分支实际上是相互独立的两个普通的分支，所以我们源文件和静态页面的更新也是相互独立的，故而需要手动分别执行git add . git commit git push来更新源文件,然后执行hexo d更新静态页面。&emsp;&emsp;下面，我将记录如何快速有效的进行博客资料的备份及环境的快速配置。 一、旧电脑上的操作1. Github新建hexo分支，专属存放博客源文件&emsp;&emsp;(1) 在master分支中，存放的则是电脑Blog文件—&gt;.deploy_git文件夹里面的文件。 123456789101112131415161718192021\\.git\\2021\\2020\\about\\album\\archives\\categories\\css\\friend\\img\\media\\live2d\\message\\music\\self-talking\\tags\\......CNAMEcontent.jsonindex.hemlmanifest.json &emsp;&emsp;(2) 在自己博客仓库中，新建一个hexo分支，并设置为默认分支，此分支专门存放博客的源文件，即使在更换电脑后，也可以git clone到新电脑。 1234567891011老电脑Blog文件夹中的所有文件 \\.deploy_git # 这是Github仓库里需要的文件，hexo g自动生成的(不能上传到Hexo分支！) \\node_modules # hexo需要的基础npm安装模块，执行npm install时重新生成(不需上传至Hexo分支) \\public # hexo g命令执行后生成的静态页面文件(不需上传至Hexo) \\scaffolds # 文章的模板(必须上传) \\source # 核心内容：自己的文章帖子！(必须上传) \\themes # 主题文件(必须上传) _config.yml # 全局配置文件(必须上传) package.json # 记录hexo需要的包，换电脑后npm根据信息来安装hexo环境(必须上传) package-lock.json db.json 2. 源文件上传hexo分支&emsp;&emsp;在本地将自己仓库git clone到本地之后，将YourGithubName.github.io文件夹里面的文件全部删除，并将老电脑里面除去.deploy_git文件夹之外的文件夹全部放入YourGithubName.github.io文件夹中。&emsp;&emsp;注意：1.现在clone下来的文件夹内应该有个.gitignore文件，用来忽略一些不需要的文件，表示这些类型文件不需要git。如果没有，右键新建，内容如下： 1234567.DS_StoreThumbs.dbdb.json*.lognode_modules/public/.deploy*/ &emsp;&emsp;注意，这里把themes/amazing中的**.git/**目录删除！！！不能重复提交.git文件。 3. 将clone并修改以后的文件夹推送到远程库&emsp;&emsp;通过一下命令进行推送： 123git add .git commit –m add_branchgit push &emsp;&emsp;此时已经成功将整个网站的源文件推送到了远程库的默认分支hexo。 二、新电脑上的操作1. 安装git与nodejs2. 将新电脑的生成的ssh key添加到GitHub账户上123cd ~/.ssh # 生成密钥ssh-keygen -t rsa -C “xxxxx@gmail.com” # &quot; &quot;填写自己github绑定的邮箱按几次回车之后会在C:\\Users\\xxx\\.ssh文件夹中生成2个文件，将id_rsa.pub中的公钥内容添加到GitHub上。 3. 克隆username.github.io仓库&emsp;&emsp;在新电脑上克隆username.github.io仓库的hexo分支(就是存放源码的分支)到本地，此时本地git仓库处于source分支,可以执行git branch -v查看。 4. 配置环境与依赖包&emsp;&emsp;在新电脑的username.github.io文件夹下执行 123npm install hexo # 安装hexo博客框架npm install # 读取package.json的包信息自动安装依赖包npm install hexo-deployer-git # 安装部署插件(不需要hexo init这条指令) 5. 上传博客文章&emsp;&emsp;最后执行 123hexo ghexo shexo d 等等一些常用命令即可提交成功。 6. 注：题外话&emsp;&emsp;这里提一嘴，当新电脑上的操作成功之后，其实对于新电脑还是老电脑其实都无所谓了，任何一台电脑包括老电脑只要安装了NodeJs环境，就都可以按照在新电脑上的操作完整地复刻出一个hexo环境，你甚至可以把老电脑原有的hexo工程删掉再执行上面这几步一样可以快速构建hexo环境，可以看到步骤非常简单。&emsp;&emsp;此外，为了保证同步，推荐先git pull合并更新再进行博客的编写。","link":"/2022/05/17/%E6%9B%B4%E6%8D%A2%E7%BB%88%E7%AB%AF%E5%90%8E%E5%8D%9A%E5%AE%A2%E7%8E%AF%E5%A2%83%E9%87%8D%E5%BB%BA/"},{"title":"Gitalk未找到相关的Issues进行评论---解决方法","text":"&emsp;&emsp;搭建博客的时候用gitalk作为评论框架，结果配置完成进行测试的时候发现出现： &emsp;&emsp;&emsp;&emsp;未找到相关的Issues进行评论，请联系XXX进行创建。 &emsp;&emsp;登录之后发现评论功能也无法显示。 &emsp;&emsp;以下为解决方法： &emsp;&emsp;刚开始使用默认网址，gitalk可以正常使用，后面因为自己使用了域名，所以导致gitalk初始化出现异常。 打开github的settings —&gt;developer settings—&gt;OAuth application gitalk应用的设置。 Homepage URL设置为 username.github.io，精确到https的地址。 Authorization callback URL直接填写 注册的域名 就可以，注意也要精确到https。 update之后进行正常登录github即可评论。 &emsp;&emsp;Gitalk注册完整信息填写如下： 1234Application name: # 随便填写Homepage URL: # 填写博客所在的仓库名。比如填写: http://Dongyx1128.github.ioApplication description: # 可以不填写Authorization callback URL: # 如果把域名通过CNAME解析到仓库上就填写域名。比如:https://dyx1128now.online/;如果没有就填写仓库名即可. 点击Register Application就可以创建接着就可以看到该应用的Client ID和Client Secret。","link":"/2020/10/06/gitalk/"}],"tags":[{"name":"博客","slug":"博客","link":"/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"服务器","slug":"服务器","link":"/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"阿里云","slug":"阿里云","link":"/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"},{"name":"阿里云盾","slug":"阿里云盾","link":"/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%BE/"}],"categories":[{"name":"博客","slug":"博客","link":"/categories/%E5%8D%9A%E5%AE%A2/"},{"name":"搭建与编辑","slug":"博客/搭建与编辑","link":"/categories/%E5%8D%9A%E5%AE%A2/%E6%90%AD%E5%BB%BA%E4%B8%8E%E7%BC%96%E8%BE%91/"},{"name":"服务器","slug":"服务器","link":"/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"自定义优化","slug":"博客/自定义优化","link":"/categories/%E5%8D%9A%E5%AE%A2/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BC%98%E5%8C%96/"},{"name":"阿里云","slug":"服务器/阿里云","link":"/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%98%BF%E9%87%8C%E4%BA%91/"},{"name":"卸载阿里云盾","slug":"服务器/阿里云/卸载阿里云盾","link":"/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%98%BF%E9%87%8C%E4%BA%91/%E5%8D%B8%E8%BD%BD%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%BE/"},{"name":"博文模板配置","slug":"博客/博文模板配置","link":"/categories/%E5%8D%9A%E5%AE%A2/%E5%8D%9A%E6%96%87%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE/"},{"name":"环境重建","slug":"博客/环境重建","link":"/categories/%E5%8D%9A%E5%AE%A2/%E7%8E%AF%E5%A2%83%E9%87%8D%E5%BB%BA/"},{"name":"Gitalk","slug":"博客/Gitalk","link":"/categories/%E5%8D%9A%E5%AE%A2/Gitalk/"}]}